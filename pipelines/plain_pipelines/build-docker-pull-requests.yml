resource_types:
  - name: pull-request
    type: docker-image
    check_every: 24h
    source:
      # temporary until there is a version which contains the submodule param
      repository: ghcr.io/alphagov/paas/teliaoss-github-pr-resource
      tag: c41729d09b4da671765979933fd7e24388c34e05

resources:
- name: paas-docker-cloudfoundry-tools-pr
  type: pull-request
  check_every: 1m
  source:
    repository: alphagov/paas-docker-cloudfoundry-tools
    access_token: ((github_access_token))
    disable_forks: true

- name: paas-tech-docs-pr
  type: pull-request
  check_every: 1m
  source:
    repository: alphagov/paas-tech-docs
    access_token: ((github_access_token))
    disable_forks: true

- name: paas-semver-resource-pr
  type: pull-request
  check_every: 1m
  source:
    repository: alphagov/paas-semver-resource
    access_token: ((github_access_token))
    disable_forks: true

- name: paas-grafana-annotation-resource-pr
  type: pull-request
  check_every: 1m
  source:
    repository: alphagov/paas-grafana-annotation-resource
    access_token: ((github_access_token))
    disable_forks: true

- name: psql
  type: registry-image
  source: &build-image-source
    username: ((github_username))
    password: ((github_registry_access_token))
    repository: ghcr.io/alphagov/paas/psql
    tag: pr-build

- name: alpine
  type: registry-image
  source: &build-image-source
    username: ((github_username))
    password: ((github_registry_access_token))
    repository: ghcr.io/alphagov/paas/alpine
    tag: pr-build

- name: golang
  type: registry-image
  source: &build-image-source
    username: ((github_username))
    password: ((github_registry_access_token))
    repository: ghcr.io/alphagov/paas/golang
    tag: pr-build

- name: node
  type: registry-image
  source: &build-image-source
    username: ((github_username))
    password: ((github_registry_access_token))
    repository: ghcr.io/alphagov/paas/node
    tag: pr-build

- name: olhtbr-metadata-resource
  type: registry-image
  source: &build-image-source
    username: ((github_username))
    password: ((github_registry_access_token))
    repository: ghcr.io/alphagov/paas/olhtbr-metadata-resource
    tag: pr-build

- name: concourse-pool-resource
  type: registry-image
  source: &build-image-source
    username: ((github_username))
    password: ((github_registry_access_token))
    repository: ghcr.io/alphagov/paas/concourse-pool-resource
    tag: pr-build

- name: ruby
  type: registry-image
  source: &build-image-source
    username: ((github_username))
    password: ((github_registry_access_token))
    repository: ghcr.io/alphagov/paas/ruby
    tag: pr-build

- name: spruce
  type: registry-image
  source:
    <<: *build-image-source
    repository: governmentpaas/spruce

- name: json-minify
  type: registry-image
  source:
    <<: *build-image-source
    repository: governmentpaas/json-minify

- name: terraform
  type: registry-image
  source:
    <<: *build-image-source
    repository: governmentpaas/terraform

- name: self-update-pipelines
  type: registry-image
  source:
    <<: *build-image-source
    repository: governmentpaas/self-update-pipelines

- name: git-ssh
  type: registry-image
  source:
    <<: *build-image-source
    repository: governmentpaas/git-ssh

- name: curl-ssl
  type: registry-image
  source:
    <<: *build-image-source
    repository: governmentpaas/curl-ssl

- name: cf-cli
  type: registry-image
  source:
    <<: *build-image-source
    repository: governmentpaas/cf-cli

- name: cf-acceptance-tests
  type: registry-image
  source:
    <<: *build-image-source
    repository: governmentpaas/cf-acceptance-tests

- name: cf-uaac
  type: registry-image
  source:
    <<: *build-image-source
    repository: governmentpaas/cf-uaac

- name: certstrap
  type: registry-image
  source:
    <<: *build-image-source
    repository: governmentpaas/certstrap

- name: bosh-cli-v2
  type: registry-image
  source:
    <<: *build-image-source
    repository: governmentpaas/bosh-cli-v2

- name: awscli
  type: registry-image
  source:
    <<: *build-image-source
    repository: governmentpaas/awscli

- name: tech-docs
  type: registry-image
  source:
    <<: *build-image-source
    repository: governmentpaas/tech-docs

- name: semver-resource
  type: registry-image
  source:
    <<: *build-image-source
    repository: governmentpaas/semver-resource

- name: grafana-annotation-resource
  type: registry-image
  source:
    <<: *build-image-source
    repository: governmentpaas/grafana-annotation-resource

jobs:
- name: build-psql-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-psql-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config: &build-image-config
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/psql
      inputs:
      - name: paas-docker-cloudfoundry-tools-pr
      outputs:
      - name: image
      run:
        path: build
  - task: create-image-tag
    config: &create-image-tag
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: paas-docker-cloudfoundry-tools-pr
      - name: image
      outputs:
      - name: image
      run:
        path: sh
        args:
          - -e
          - -u
          - -c
          - |
            git_branch_name="$(cd paas-docker-cloudfoundry-tools-pr && \
                          git rev-parse --abbrev-ref HEAD | sed -e 's/^/ /')"

            git_commit_sha="$(cd paas-docker-cloudfoundry-tools-pr && \
                     git log --pretty=format:'%H' -n 1)"

            echo "${git_branch_name} ${git_commit_sha}" > image/tags
    on_success:
      do:
        - put: psql
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-psql-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-psql-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-alpine-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-alpine-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config: &build-image-config
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/alpine
      inputs:
      - name: paas-docker-cloudfoundry-tools-pr
      outputs:
      - name: image
      run:
        path: build
  - task: create-image-tag
    config: &create-image-tag
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: paas-docker-cloudfoundry-tools-pr
      - name: image
      outputs:
      - name: image
      run:
        path: sh
        args:
          - -e
          - -u
          - -c
          - |
            git_branch_name="$(cd paas-docker-cloudfoundry-tools-pr && \
                          git rev-parse --abbrev-ref HEAD | sed -e 's/^/ /')"

            git_commit_sha="$(cd paas-docker-cloudfoundry-tools-pr && \
                     git log --pretty=format:'%H' -n 1)"

            echo "${git_branch_name} ${git_commit_sha}" > image/tags
    on_success:
      do:
        - put: alpine
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-alpine-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-alpine-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-golang-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-golang-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config: &build-image-config
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/golang
      inputs:
      - name: paas-docker-cloudfoundry-tools-pr
      outputs:
      - name: image
      run:
        path: build
  - task: create-image-tag
    config: &create-image-tag
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: paas-docker-cloudfoundry-tools-pr
      - name: image
      outputs:
      - name: image
      run:
        path: sh
        args:
          - -e
          - -u
          - -c
          - |
            git_branch_name="$(cd paas-docker-cloudfoundry-tools-pr && \
                          git rev-parse --abbrev-ref HEAD | sed -e 's/^/ /')"

            git_commit_sha="$(cd paas-docker-cloudfoundry-tools-pr && \
                     git log --pretty=format:'%H' -n 1)"

            echo "${git_branch_name} ${git_commit_sha}" > image/tags
    on_success:
      do:
        - put: golang
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-golang-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-golang-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-node-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-node-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config: &build-image-config
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/node
      inputs:
      - name: paas-docker-cloudfoundry-tools-pr
      outputs:
      - name: image
      run:
        path: build
  - task: create-image-tag
    config: &create-image-tag
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: paas-docker-cloudfoundry-tools-pr
      - name: image
      outputs:
      - name: image
      run:
        path: sh
        args:
          - -e
          - -u
          - -c
          - |
            git_branch_name="$(cd paas-docker-cloudfoundry-tools-pr && \
                          git rev-parse --abbrev-ref HEAD | sed -e 's/^/ /')"

            git_commit_sha="$(cd paas-docker-cloudfoundry-tools-pr && \
                     git log --pretty=format:'%H' -n 1)"

            echo "${git_branch_name} ${git_commit_sha}" > image/tags
    on_success:
      do:
        - put: node
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-node-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-node-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-olhtbr-metadata-resource-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-olhtbr-metadata-resource-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config: &build-image-config
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/olhtbr-metadata-resource
      inputs:
      - name: paas-docker-cloudfoundry-tools-pr
      outputs:
      - name: image
      run:
        path: build
  - task: create-image-tag
    config: &create-image-tag
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: paas-docker-cloudfoundry-tools-pr
      - name: image
      outputs:
      - name: image
      run:
        path: sh
        args:
          - -e
          - -u
          - -c
          - |
            git_branch_name="$(cd paas-docker-cloudfoundry-tools-pr && \
                          git rev-parse --abbrev-ref HEAD | sed -e 's/^/ /')"

            git_commit_sha="$(cd paas-docker-cloudfoundry-tools-pr && \
                     git log --pretty=format:'%H' -n 1)"

            echo "${git_branch_name} ${git_commit_sha}" > image/tags
    on_success:
      do:
        - put: olhtbr-metadata-resource
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-olhtbr-metadata-resource-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-olhtbr-metadata-resource-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-concourse-pool-resource-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-concourse-pool-resource-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config: &build-image-config
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/concourse-pool-resource
      inputs:
      - name: paas-docker-cloudfoundry-tools-pr
      outputs:
      - name: image
      run:
        path: build
  - task: create-image-tag
    config: &create-image-tag
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: paas-docker-cloudfoundry-tools-pr
      - name: image
      outputs:
      - name: image
      run:
        path: sh
        args:
          - -e
          - -u
          - -c
          - |
            git_branch_name="$(cd paas-docker-cloudfoundry-tools-pr && \
                          git rev-parse --abbrev-ref HEAD | sed -e 's/^/ /')"

            git_commit_sha="$(cd paas-docker-cloudfoundry-tools-pr && \
                     git log --pretty=format:'%H' -n 1)"

            echo "${git_branch_name} ${git_commit_sha}" > image/tags
    on_success:
      do:
        - put: concourse-pool-resource
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-concourse-pool-resource-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-concourse-pool-resource-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-ruby-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-ruby-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config: &build-image-config
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/ruby
      inputs:
      - name: paas-docker-cloudfoundry-tools-pr
      outputs:
      - name: image
      run:
        path: build
  - task: create-image-tag
    config: &create-image-tag
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: paas-docker-cloudfoundry-tools-pr
      - name: image
      outputs:
      - name: image
      run:
        path: sh
        args:
          - -e
          - -u
          - -c
          - |
            git_branch_name="$(cd paas-docker-cloudfoundry-tools-pr && \
                          git rev-parse --abbrev-ref HEAD | sed -e 's/^/ /')"

            git_commit_sha="$(cd paas-docker-cloudfoundry-tools-pr && \
                     git log --pretty=format:'%H' -n 1)"

            echo "${git_branch_name} ${git_commit_sha}" > image/tags
    on_success:
      do:
        - put: ruby
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-ruby-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-ruby-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-spruce-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-spruce-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config:
      <<: *build-image-config
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/spruce
  - task: create-image-tag
    config: *create-image-tag
    on_success:
      do:
        - put: spruce
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-spruce-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-spruce-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-json-minify-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-json-minify-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config:
      <<: *build-image-config
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/json-minify
  - task: create-image-tag
    config: *create-image-tag
    on_success:
      do:
        - put: json-minify
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-json-minify-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-json-minify-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-terraform-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-terraform-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config:
      <<: *build-image-config
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/terraform
  - task: create-image-tag
    config: *create-image-tag
    on_success:
      do:
        - put: terraform
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-terraform-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-terraform-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-self-update-pipelines-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-self-update-pipelines-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config:
      <<: *build-image-config
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/self-update-pipelines
  - task: create-image-tag
    config: *create-image-tag
    on_success:
      do:
        - put: self-update-pipelines
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-self-update-pipelines-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-self-update-pipelines-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-git-ssh-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-git-ssh-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config:
      <<: *build-image-config
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/git-ssh
  - task: create-image-tag
    config: *create-image-tag
    on_success:
      do:
        - put: git-ssh
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-git-ssh-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-git-ssh-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-curl-ssl-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-curl-ssl-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config:
      <<: *build-image-config
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/curl-ssl
  - task: create-image-tag
    config: *create-image-tag
    on_success:
      do:
        - put: curl-ssl
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-curl-ssl-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-curl-ssl-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-cf-cli-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-cf-cli-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config:
      <<: *build-image-config
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/cf-cli
  - task: create-image-tag
    config: *create-image-tag
    on_success:
      do:
        - put: cf-cli
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-cf-cli-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-cf-cli-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-cf-acceptance-tests-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-cf-acceptance-tests-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config:
      <<: *build-image-config
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/cf-acceptance-tests
  - task: create-image-tag
    config: *create-image-tag
    on_success:
      do:
        - put: cf-acceptance-tests
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-cf-acceptance-tests-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-cf-acceptance-tests-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-cf-uaac-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-cf-uaac-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config:
      <<: *build-image-config
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/cf-uaac
  - task: create-image-tag
    config: *create-image-tag
    on_success:
      do:
        - put: cf-uaac
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-cf-uaac-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-cf-uaac-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-certstrap-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-certstrap-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config:
      <<: *build-image-config
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/certstrap
  - task: create-image-tag
    config: *create-image-tag
    on_success:
      do:
        - put: certstrap
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-certstrap-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-certstrap-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-bosh-cli-v2-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-bosh-cli-v2-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config:
      <<: *build-image-config
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/bosh-cli-v2
  - task: create-image-tag
    config: *create-image-tag
    on_success:
      do:
        - put: bosh-cli-v2
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-bosh-cli-v2-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-bosh-cli-v2-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-awscli-pr
  serial: true
  plan:
  - get: paas-docker-cloudfoundry-tools-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-docker-cloudfoundry-tools-pr
    resource: paas-docker-cloudfoundry-tools-pr
    params:
      path: paas-docker-cloudfoundry-tools-pr
      context: ((github_status_context))/build-awscli-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config:
      <<: *build-image-config
      params:
        CONTEXT: paas-docker-cloudfoundry-tools-pr/awscli
  - task: create-image-tag
    config: *create-image-tag
    on_success:
      do:
        - put: awscli
          params:
            image: image/image.tar
            additional_tags: image/tags
        - put: paas-docker-cloudfoundry-tools-pr
          params:
            path: paas-docker-cloudfoundry-tools-pr
            context: ((github_status_context))/build-awscli-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-docker-cloudfoundry-tools-pr
      params:
        path: paas-docker-cloudfoundry-tools-pr
        context: ((github_status_context))/build-awscli-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-paas-tech-pr
  serial: true
  plan:
  - get: paas-tech-docs-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-tech-docs-pr
    resource: paas-tech-docs-pr
    params:
      path: paas-tech-docs-pr
      context: ((github_status_context))/build-paas-tech-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: paas-tech-docs-pr
        path: .
      outputs:
      - name: image
      run:
        path: build
  - task: create-image-tag
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: paas-tech-docs-pr
      - name: image
      outputs:
      - name: image
      run:
        path: sh
        args:
          - -e
          - -u
          - -c
          - |
            cd paas-tech-docs-pr && git rev-parse --abbrev-ref HEAD > ../image/branch
    on_success:
      do:
        - put: tech-docs
          params:
            image: image/image.tar
            additional_tags: image/branch
        - put: paas-tech-docs-pr
          params:
            path: paas-tech-docs-pr
            context: ((github_status_context))/build-paas-tech-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-tech-docs-pr
      params:
        path: paas-tech-docs-pr
        context: ((github_status_context))/build-paas-tech-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-paas-semver-resource-pr
  serial: true
  plan:
  - get: paas-semver-resource-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-semver-resource-pr
    resource: paas-semver-resource-pr
    params:
      path: paas-semver-resource-pr
      context: ((github_status_context))/build-paas-semver-resource-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: paas-semver-resource-pr
        path: .
      outputs:
      - name: image
      run:
        path: build
  - task: create-image-tag
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: paas-semver-resource-pr
      - name: image
      outputs:
      - name: image
      run:
        path: sh
        args:
          - -e
          - -u
          - -c
          - |
            cd paas-semver-resource-pr && git rev-parse --abbrev-ref HEAD > ../image/branch
    on_success:
      do:
        - put: semver-resource
          params:
            image: image/image.tar
            additional_tags: image/branch
        - put: paas-semver-resource-pr
          params:
            path: paas-semver-resource-pr
            context: ((github_status_context))/build-paas-semver-resource-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-semver-resource-pr
      params:
        path: paas-semver-resource-pr
        context: ((github_status_context))/build-paas-semver-resource-pr
        status: FAILURE
      get_params:
        skip_download: true

- name: build-paas-grafana-annotation-resource-pr
  serial: true
  plan:
  - get: paas-grafana-annotation-resource-pr
    version: every
    trigger: true
    params:
      integration_tool: checkout
      submodules: true
  - put: update-paas-grafana-annotation-resource-pr
    resource: paas-grafana-annotation-resource-pr
    params:
      path: paas-grafana-annotation-resource-pr
      context: ((github_status_context))/build-paas-grafana-annotation-resource-pr
      status: PENDING
    get_params:
      skip_download: true
  - task: build
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: paas-grafana-annotation-resource-pr
        path: .
      outputs:
      - name: image
      run:
        path: build
  - task: create-image-tag
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: vito/oci-build-task
      inputs:
      - name: paas-grafana-annotation-resource-pr
      - name: image
      outputs:
      - name: image
      run:
        path: sh
        args:
          - -e
          - -u
          - -c
          - |
            cd paas-grafana-annotation-resource-pr && git rev-parse --abbrev-ref HEAD > ../image/branch
    on_success:
      do:
        - put: grafana-annotation-resource
          params:
            image: image/image.tar
            additional_tags: image/branch
        - put: paas-grafana-annotation-resource-pr
          params:
            path: paas-grafana-annotation-resource-pr
            context: ((github_status_context))/build-paas-grafana-annotation-resource-pr
            status: SUCCESS
          get_params:
            skip_download: true
    on_failure:
      put: paas-grafana-annotation-resource-pr
      params:
        path: paas-grafana-annotation-resource-pr
        context: ((github_status_context))/build-paas-grafana-annotation-resource-pr
        status: FAILURE
      get_params:
        skip_download: true
