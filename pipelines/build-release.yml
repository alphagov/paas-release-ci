---
groups:
  - name: main
    jobs:
      - build-dev-release
      - build-final-release
  - name: version
    jobs:
      - bump-major
      - bump-minor

resource_types:
  - name: pull-request
    type: registry-image
    check_every: 24h
    source:
      repository: teliaoss/github-pr-resource
      tag: v0.23.0

  - name: s3-iam
    type: registry-image
    check_every: 24h
    source:
      repository: ghcr.io/alphagov/paas/s3-resource
      tag: 97e441efbfb06ac7fb09786fd74c64b05f9cc907

  - name: semver-iam
    type: registry-image
    check_every: 24h
    source:
      repository: ghcr.io/alphagov/paas/semver-resource
      tag: f2a80c95481056aa57d837e3b14f0012b542fdb3

resources:
  - name: bosh-release-pr
    type: pull-request
    check_every: 1m
    source:
      repository: ((github_repo))
      access_token: ((github_access_token))
      disable_forks: true

  - name: bosh-release-repo
    type: git
    check_every: 1m
    source:
      uri: ((github_repo_uri))
      branch: ((final_release_branch))

  - name: bosh-release-tarballs
    type: s3-iam
    check_every: 24h
    source:
      bucket: ((releases_bucket_name))
      region_name: ((aws_region))
      regexp: ([a-z0-9]+).tgz

  - name: bosh-release-version
    type: semver-iam
    check_every: 24h
    source:
      bucket: ((releases_bucket_name))
      region_name: ((aws_region))
      key: ((version_file))
      initial_version: 0.1.0

jobs:
  - name: build-dev-release
    serial: true
    plan:
      - get: bosh-release-pr
        version: every
        trigger: true
        params:
          integration_tool: checkout
          submodules: true
      - put: update-bosh-release-pr
        resource: bosh-release-pr
        params:
          path: bosh-release-pr
          context: ((github_status_context))
          status: PENDING
        get_params:
          skip_download: true
      - task: build
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: ghcr.io/alphagov/paas/bosh-cli-v2
              tag: 540813b98e23f9865b33c206a840a8d5633287e9
          inputs:
            - name: bosh-release-pr
          outputs:
            - name: bosh-release-tarballs
          params:
            BUCKET: ((releases_bucket_name))
            REGION: ((aws_region))
            NAME: ((boshrelease_name))
          run:
            path: bash
            args:
              - -e
              - -c
              - |
                cd bosh-release-pr

                if [ -x "./scripts/vendor_package.sh" ]; then
                  ./scripts/vendor_package.sh
                else
                  echo "No vendor packaging is required."
                fi

                VERSION=0.0.$(date +%s)
                export VERSION
                bosh create-release \
                  --name "${NAME}" \
                  --version "${VERSION}" \
                  --tarball "../bosh-release-tarballs/${NAME}-${VERSION}.tgz" \
                  --force
                ls -al ../bosh-release-tarballs

                SHA1=$(openssl sha1 "../bosh-release-tarballs/${NAME}-${VERSION}.tgz" | cut -d' ' -f 2)
                cat <<EOF

                releases:
                  - name: ${NAME}
                    version: ${VERSION}
                    url: https://s3-${REGION}.amazonaws.com/${BUCKET}/${NAME}-${VERSION}.tgz
                    sha1: ${SHA1}
                EOF
        on_success:
          do:
            - put: bosh-release-tarballs
              params:
                file: bosh-release-tarballs/*.tgz
                acl: public-read
            - put: bosh-release-pr
              params:
                path: bosh-release-pr
                context: ((github_status_context))
                status: SUCCESS
              get_params:
                skip_download: true
        on_failure:
          put: bosh-release-pr
          params:
            path: bosh-release-pr
            context: ((github_status_context))
            status: FAILURE
          get_params:
            skip_download: true

  - name: build-final-release
    serial: true
    plan:
      - get: bosh-release-repo
        trigger: true
      - get: bosh-release-version
        params:
          bump: patch
      - task: build
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: ghcr.io/alphagov/paas/bosh-cli-v2
              tag: 540813b98e23f9865b33c206a840a8d5633287e9
          inputs:
            - name: bosh-release-repo
            - name: bosh-release-version
          outputs:
            - name: bosh-release-tarballs
          params:
            BUCKET: ((releases_bucket_name))
            REGION: ((aws_region))
            NAME: ((boshrelease_name))
          run:
            path: bash
            args:
              - -eu
              - -c
              - |
                cd bosh-release-repo

                if [ -x "./scripts/vendor_package.sh" ]; then
                  ./scripts/vendor_package.sh
                else
                  echo "No vendor packaging is required."
                fi

                VERSION=$(cat ../bosh-release-version/number)
                export VERSION
                bosh create-release \
                  --name "${NAME}" \
                  --version "${VERSION}" \
                  --tarball "../bosh-release-tarballs/${NAME}-${VERSION}.tgz" \
                  --force
                cp ../bosh-release-version/number ../bosh-release-tarballs/version
                ls -al ../bosh-release-tarballs

                SHA1=$(openssl sha1 "../bosh-release-tarballs/${NAME}-${VERSION}.tgz" | cut -d' ' -f 2)
                cat <<EOF

                releases:
                  - name: ${NAME}
                    version: ${VERSION}
                    url: https://s3-${REGION}.amazonaws.com/${BUCKET}/${NAME}-${VERSION}.tgz
                    sha1: ${SHA1}
                EOF

        on_success:
          do:
            - put: bosh-release-version
              params:
                file: bosh-release-tarballs/version
            - put: bosh-release-tarballs
              params:
                file: bosh-release-tarballs/*.tgz
                acl: public-read

  - name: bump-major
    plan:
      - put: bosh-release-version
        params:
          bump: major

  - name: bump-minor
    plan:
      - put: bosh-release-version
        params:
          bump: minor
