---
resource_types:
  - name: s3-iam
    type: registry-image
    source:
      repository: ghcr.io/alphagov/paas/s3-resource
      tag: 97e441efbfb06ac7fb09786fd74c64b05f9cc907

  - name: semver-iam
    type: registry-image
    source:
      repository: ghcr.io/alphagov/paas/semver-resource
      tag: f2a80c95481056aa57d837e3b14f0012b542fdb3

  - name: slack-notification-resource
    type: registry-image
    source:
      repository: cfcommunity/slack-notification-resource

resources:
  - name: pipeline-trigger
    type: semver-iam
    check_every: 24h
    source:
      bucket: ((state_bucket_name))
      region_name: ((aws_region))
      key: ((pipeline_trigger_file))

  - name: paas-release-ci
    type: git
    check_every: 1m
    source:
      uri: https://github.com/alphagov/paas-release-ci
      branch: ((branch_name))

  - name: release-ci-tfstate
    type: s3-iam
    check_every: 24h
    source:
      bucket: ((state_bucket_name))
      region_name: ((aws_region))
      versioned_file: release-ci.tfstate
      initial_version: "-"
      initial_content_text: |
        {
            "version": 1,
            "serial": 0,
            "modules": [
                {
                    "path": [
                        "root"
                    ],
                    "outputs": {},
                    "resources": {}
                }
            ]
        }

  - name: ssh-private-key
    type: s3-iam
    check_every: 24h
    source:
      bucket: ((state_bucket_name))
      versioned_file: ci_build_tag_key
      region_name: ((aws_region))
      initial_version: "-"

  - name: ssh-public-key
    type: s3-iam
    check_every: 24h
    source:
      bucket: ((state_bucket_name))
      versioned_file: ci_build_tag_key.pub
      region_name: ((aws_region))
      initial_version: "-"

  - name: slack-notification
    type: slack-notification-resource
    source:
      url: ((slack_webhook_url))

jobs:
  - name: self-update
    plan:
      - get: paas-release-ci
        trigger: true
      - task: self-update-pipeline
        tags: [colocated-with-web]
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: ghcr.io/alphagov/paas/self-update-pipelines
              tag: 9d7b91294e91172c6f2d63caae4c7b645fc46036
          inputs:
            - name: paas-release-ci
          params:
            CONCOURSE_WEB_USER: admin
            CONCOURSE_WEB_PASSWORD: ((concourse_web_password))
            SELF_UPDATE_PIPELINE: ((self_update_pipeline))
            DEPLOY_ENV: ((deploy_env))
            BRANCH: ((branch_name))
            MAKEFILE_ENV_TARGET: ((makefile_env_target))
            CONCOURSE_URL: ((concourse_url))
            GITHUB_ACCESS_TOKEN: ((github_access_token))
            SLACK_WEBHOOK_URL: ((slack_webhook_url))
            STATE_BUCKET_NAME: ((state_bucket_name))
            RELEASES_BUCKET_NAME: ((releases_bucket_name))
            CF_APPS_DOMAIN: ((cf_apps_domain))
            CF_SYSTEM_DOMAIN: ((cf_system_domain))
            DOCKERHUB_USERNAME: ((dockerhub_username))
            DOCKERHUB_PASSWORD: ((dockerhub_password))
          run:
            path: sh
            args:
              - -e
              - -u
              - -c
              - |
                if [ "${SELF_UPDATE_PIPELINE}" != "true" ]; then
                  echo "Self update pipeline is disabled. Skipping. (set SELF_UPDATE_PIPELINE=true to enable)"
                else
                  echo "Self update pipeline is enabled. Updating. (set SELF_UPDATE_PIPELINE=false to disable)"

                  make -C ./paas-release-ci "${MAKEFILE_ENV_TARGET}" pipelines
                fi
        on_failure: &slack_failure_notification
          put: slack-notification
          params:
            text: "Job $BUILD_NAME in $BUILD_JOB_NAME on $BUILD_PIPELINE_NAME failed. Check the logs at $ATC_EXTERNAL_URL/builds/$BUILD_ID."
      - put: pipeline-trigger
        params: {bump: patch}

  - name: terraform
    plan:
      - in_parallel:
          - get: pipeline-trigger
            passed: ['self-update']
            trigger: true
          - get: paas-release-ci
            passed: ['self-update']
          - get: release-ci-tfstate
      - task: terraform-apply
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: ghcr.io/alphagov/paas/terraform
              tag: 9d7b91294e91172c6f2d63caae4c7b645fc46036
          inputs:
            - name: paas-release-ci
            - name: release-ci-tfstate
          outputs:
            - name: updated-release-ci-tfstate
          params:
            TF_VAR_deploy_env: ((deploy_env))
            TF_VAR_releases_bucket_name: ((releases_bucket_name))
            TF_VAR_releases_blobs_bucket_name: ((releases_blobs_bucket_name))
          run:
            path: sh
            args:
              - -e
              - -u
              - -c
              - |
                cp release-ci-tfstate/release-ci.tfstate updated-release-ci-tfstate/release-ci.tfstate

                cd paas-release-ci/terraform || exit
                terraform init
                terraform apply \
                  -auto-approve=true \
                  -state="../../updated-release-ci-tfstate/release-ci.tfstate"
        ensure:
          put: release-ci-tfstate
          params:
            file: updated-release-ci-tfstate/release-ci.tfstate
        on_failure: *slack_failure_notification

  - name: generate-ssh-keys
    serial: true
    plan:
      - in_parallel:
         - get: ssh-private-key
         - get: ssh-public-key
         - get: pipeline-trigger
           passed: ['terraform']
           trigger: true
      - task: generate-deployments-ssh-keypair
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: ghcr.io/alphagov/paas/git-ssh
              tag: 9d7b91294e91172c6f2d63caae4c7b645fc46036
          inputs:
            - name: ssh-private-key
            - name: ssh-public-key
          outputs:
            - name: generated-ssh-private-key
            - name: generated-ssh-public-key
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                if [ -s ssh-private-key/ci_build_tag_key ] ; then
                  echo "Deployments private key non-zero size, skipping generation..."
                  echo "Key uploads will fail and this is OK as no new keys have been generated."
                  echo "Existing ssh key is ..."
                  cat ssh-public-key/ci_build_tag_key.pub
                  exit 0
                fi

                echo "Generating new ssh key pair for deployments..."
                ssh-keygen -t rsa -b 4096 -f ci_build_tag_key -N ''
                echo "New ssh key is ..."
                cat ci_build_tag_key.pub
                cp ci_build_tag_key generated-ssh-private-key
                cp ci_build_tag_key.pub generated-ssh-public-key
        on_success:
          try:
            in_parallel:
              - put: ssh-private-key
                params:
                  file: generated-ssh-private-key/ci_build_tag_key
              - put: ssh-public-key
                params:
                  file: generated-ssh-public-key/ci_build_tag_key.pub
        on_failure: *slack_failure_notification

  - name: dynamic-pipelines
    plan:
      - in_parallel:
          - get: pipeline-trigger
            passed: ['generate-ssh-keys']
            trigger: true
          - get: paas-release-ci
            passed: ['terraform']
      - task: build-pipelines
        tags: [colocated-with-web]
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: ghcr.io/alphagov/paas/self-update-pipelines
              tag: 9d7b91294e91172c6f2d63caae4c7b645fc46036
          inputs:
            - name: paas-release-ci
          params:
            DEPLOY_ENV: ((deploy_env))
            BRANCH: ((branch_name))
            MAKEFILE_ENV_TARGET: ((makefile_env_target))
            CONCOURSE_WEB_USER: admin
            CONCOURSE_WEB_PASSWORD: ((concourse_web_password))
            CONCOURSE_URL: ((concourse_url))
            GITHUB_ACCESS_TOKEN: ((github_access_token))
            SLACK_WEBHOOK_URL: ((slack_webhook_url))
            STATE_BUCKET_NAME: ((state_bucket_name))
            RELEASES_BUCKET_NAME: ((releases_bucket_name))
            CF_APPS_DOMAIN: ((cf_apps_domain))
            CF_SYSTEM_DOMAIN: ((cf_system_domain))
            DOCKERHUB_USERNAME: ((dockerhub_username))
            DOCKERHUB_PASSWORD: ((dockerhub_password))
          run:
            path: sh
            args:
              - -e
              - -u
              - -c
              - |
                make -C ./paas-release-ci "${MAKEFILE_ENV_TARGET}" boshrelease-pipelines
                make -C ./paas-release-ci "${MAKEFILE_ENV_TARGET}" integration-test-pipelines
                make -C ./paas-release-ci "${MAKEFILE_ENV_TARGET}" plain-pipelines
        on_failure: *slack_failure_notification
